/* 
 * This file is part of Stack Wallet.
 * 
 * Copyright (c) 2023 Cypher Stack
 * All Rights Reserved.
 * The code is distributed under GPLv3 license, see LICENSE file for details.
 * Generated by Cypher Stack on 2023-05-26
 *
 */

import 'package:tuple/tuple.dart';

import '../isar/exchange_cache/currency.dart';
import '../isar/exchange_cache/pair.dart';

class AggregateCurrency {
  final Map<String, Currency?> _map = {};

  AggregateCurrency({
    required List<Tuple2<String, Currency>> exchangeCurrencyPairs,
  }) {
    assert(exchangeCurrencyPairs.isNotEmpty);

    for (final item in exchangeCurrencyPairs) {
      _map[item.item1] = item.item2;
    }
  }

  Currency? forExchange(String exchangeName) {
    return _map[exchangeName];
  }

  String? networkFor(String exchangeName) => forExchange(exchangeName)?.network;

  String get ticker => _map.values.first!.ticker;

  String get name => _map.values.first!.name;

  String get image => _map.values.first!.image;

  SupportedRateType get rateType => _map.values.first!.rateType;

  bool get isStackCoin => _map.values.first!.isStackCoin;

  String get fuzzyNet => _map.values.first!.getFuzzyNet();

  @override
  String toString() {
    String str = "AggregateCurrency: {";
    for (final key in _map.keys) {
      str += "\n $key: ${_map[key]},";
    }
    str += "\n}";
    return str;
  }

  @override
  bool operator ==(Object other) {
    return other is AggregateCurrency &&
        other.ticker == ticker &&
        other._map.isNotEmpty &&
        other._map.length == _map.length &&
        other._map.values.first!.getFuzzyNet() ==
            _map.values.first!.getFuzzyNet();
  }

  @override
  int get hashCode =>
      Object.hash(ticker, _map.values.first!.getFuzzyNet(), _map.length);
}
